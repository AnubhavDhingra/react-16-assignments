{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/fibonacci/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/fibonacci/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/fibonacci/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/fibonacci/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/fibonacci/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/fibonacci/src/FibonacciCounter.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nvar FibonacciCounter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FibonacciCounter, _Component);\n\n  function FibonacciCounter() {\n    _classCallCheck(this, FibonacciCounter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FibonacciCounter).apply(this, arguments));\n  }\n\n  _createClass(FibonacciCounter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, this.props.counter);\n    }\n  }]);\n\n  return FibonacciCounter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    counter: state.counter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIncrement: function onIncrement() {\n      dispatch({\n        type: \"INCREMENT\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(FibonacciCounter);","map":{"version":3,"sources":["/Library/WebServer/Documents/fibonacci/src/FibonacciCounter.js"],"names":["React","Component","connect","FibonacciCounter","props","counter","mapStateToProps","state","mapDispatchToProps","dispatch","onIncrement","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,gB;;;;;;;;;;;;;6BACO;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,KAAL,CAAWC,OAAjB,CADJ;AAGD;;;;EAL0BJ,S;;AAQ7B,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACF;AADZ,GAAP;AAGD,CAJD;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHC,IAAAA,WAAW,EAAE,uBAAM;AACfD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH;AALE,GAAP;AAOH,CARD;;AAUA,eAAeT,OAAO,CAACI,eAAD,CAAP,CAAyBH,gBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nclass FibonacciCounter extends Component {\n    render() {\n      return (\n          <div>{this.props.counter}</div>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n        counter: state.counter\n    };\n  }\n\n  const mapDispatchToProps = dispatch => {\n      return {\n          onIncrement: () => {\n              dispatch({\n                  type: \"INCREMENT\"\n              });\n          }\n      }\n  }\n\n  export default connect(mapStateToProps)(FibonacciCounter);"]},"metadata":{},"sourceType":"module"}